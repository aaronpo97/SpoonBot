import openai from '../config/openai';
import ServerError from '../util/error/ServerError';
import { MenuGenRequestBody } from '../util/RequestSchemas';
import openAICreateModeration from './openAICreateModeration';

const generatePrompt = ({ cuisine, name }: MenuGenRequestBody) => {
  const prompt = `

  You are a chef at a restaurant called ${name}. 
  You are tasked with creating a menu for ${cuisine} cuisine. 
  Only use 150 tokens to create a menu for ${name}.

  Create a three course meal with appetizers, entrees, and desserts.

`;

  return prompt;
};

const openAiCreateMenu = async (body: MenuGenRequestBody, identifier: string) => {
  try {
    const { cuisine, name } = body;
    const prompt = generatePrompt({ cuisine, name });

    const result = await openai.createCompletion({
      model: 'text-curie-001',
      prompt,
      max_tokens: 150,
      user: identifier,
    });

    const data = result.data.choices![0].text!;

    const moderation = await openAICreateModeration(data);

    if (moderation.results[0].flagged) {
      throw new Error(
        'The response generated by OpenAI was flagged as inappropriate. Please try again.',
      );
    }

    return data;
  } catch (error) {
    const errorIsError = error instanceof Error;
    const message = errorIsError
      ? error.message
      : 'The server failed to send a request to OpenAI.';
    const status = errorIsError ? 400 : 500;
    throw new ServerError(message, status);
  }
};

export default openAiCreateMenu;
