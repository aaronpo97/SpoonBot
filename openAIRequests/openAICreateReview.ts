import openai from '../config/openai';
import ServerError from '../util/error/ServerError';
import { ReviewGenRequestBody } from '../util/RequestSchemas';
import openAICreateModeration from './openAICreateModeration';

const generatePrompt = ({ keywords, name }: ReviewGenRequestBody) => {
  const prompt = `You are a restaurant review bot. Please write a long restaurant review based on this information.

  Limit your review to 100 tokens.

  name: ${name}
  keywords: ${keywords}
  `;
  return prompt;
};

const openAICreateReview = async (info: ReviewGenRequestBody) => {
  try {
    const { name, keywords } = info;

    const prompt = generatePrompt({
      name,
      keywords,
    });
    const result = await openai.chat.completions.create({
      model: 'gpt-3.5-turbo',
      messages: [
        {
          role: 'system',
          content: prompt,
        },
      ],
      max_tokens: 200,
    });

    const data = result.choices![0].message.content;
    if (!data) {
      throw new ServerError('The server failed to generate a response.', 500);
    }
    const moderation = await openAICreateModeration(data);

    if (moderation.results[0].flagged) {
      throw new Error(
        'The response generated by OpenAI was flagged as inappropriate. Please try again.',
      );
    }
    return data;
  } catch (error) {
    throw new ServerError('The server failed to send a request to OpenAI.', 500);
  }
};

export default openAICreateReview;
