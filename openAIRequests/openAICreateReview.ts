import fs from 'fs/promises';
import openai from '../config/openai';
import ServerError from '../util/error/ServerError';
import { ReviewGenRequestBody } from '../util/RequestSchemas';
import openAICreateModeration from './openAICreateModeration';

const generatePrompt = ({ keywords, name }: ReviewGenRequestBody) => {
  const prompt = `You are a restaurant review bot. Please write a long restaurant review based on this information.
  
  Limit the review to 250 tokens.

  name: ${name}
  keywords: ${keywords}
  `;
  return prompt;
};

const openAICreateReview = async (info: ReviewGenRequestBody, id: string) => {
  try {
    const { name, keywords } = info;

    const prompt = generatePrompt({
      name,
      keywords,
    });
    const result = await openai.createCompletion({
      model: 'text-davinci-003',
      prompt,
      max_tokens: 250,
      user: id,
    });

    const data = result.data.choices![0].text!.replace(/[\r\n]/gm, '');
    const moderation = await openAICreateModeration(data);

    if (moderation.results[0].flagged) {
      throw new Error(
        'The response generated by OpenAI was flagged as inappropriate. Please try again.',
      );
    }
    return data;
  } catch (error) {
    throw new ServerError('The server failed to send a request to OpenAI.', 500);
  }
};

export default openAICreateReview;
